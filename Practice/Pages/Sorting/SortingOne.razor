@page "/SortingOne"

<h3>SortingOne</h3>
<br />
<p>Write a C# Sharp program to sort a list of elements using Shell sort. Go to the editor
According to Wikipedia "Shell sort or Shell's method, is an in-place comparison sort. It can be seen as either a generalization of sorting by exchange (bubble sort) or sorting by insertion (insertion sort). The method starts by sorting pairs of elements far apart from each other, then progressively reducing the gap between elements to be compared. Starting with far apart elements can move some out-of-place elements into position faster than a simple nearest neighbour exchange."</p>
<p><strong>Step by step:</strong> https://www.tutorialspoint.com/data_structures_algorithms/shell_sort_algorithm.htm</p> <br />

<strong>Add any sequence of numbers:</strong> <br />
<input type="number" @bind="Result"/> <button @onclick="ShellSort">Shell Sort</button> <br /><br />
@Result


@foreach (var number in Input)
{
    <li>@number</li>
}

@code {
    public int Result { get; set; }

    public List<int> Input { get; set; } = new List<int>();

    public void ShellSort() 
    {
        //Transform input into list
        Input = Result.ToString().Select(x => Convert.ToInt32(x.ToString())).ToList();

        //Get the initial gap value (list length / 2)
        int gap = Input.Count / 2;

        //Get index[0] => first gap element and last gap element => gap
        int firstGapElement = Input[0];
        int lastGapElement = Input[gap];
        
        //Check and swap
        if (firstGapElement > lastGapElement) 
        {
            int temp = firstGapElement;
            Input[0] = lastGapElement;
            Input[gap] = temp;

            //If swapped, get the first gap element and check if there's a gap in the reverse direction. If so, check and swap again working to the left until reverse gap surpasses index[0]
            
        }

        
        //Increase first gap element and last by 1 and repeat the process until you hit list length
        //Divide gap by 2 and repeat the whole process. 
        Result = 0;
    }
}
